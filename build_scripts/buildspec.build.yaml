version: 0.2
env:
  shell: bash
  git-credential-helper: yes
  variables:
    REGION: "ap-northeast-2"
phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - apt-get update
      - apt-get install -y jq
  pre_build:
    commands:
      - echo "Print awscli version"
      - aws --version
      - echo "### SRC_VERISON-> ${CODEBUILD_RESOLVED_SOURCE_VERSION} | Logginging to ECR"
      - docker login --username AWS -p $(aws ecr get-login-password --region ${REGION}) ${ECR_REPO_URI}
      - export TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - export TAG=$(echo $TAG | sed -e "s/\.//g"| tr '[:upper:]' '[:lower:]')
      - export TAG=$(echo "${TAG:0:8}")
      - export IMAGE_TAG="${TAG}"
      - export REPOSITORY_URI="${MY_ECR}"
      - echo "## TAG-> ${TAG}"
      - |
        echo "Start Unit Test and Coverage Test"
        chmod +x ./gradlew 
        ./gradlew clean build --no-daemon
  build:
    commands:
      - |
        echo "### Building initial Container Image ###"
        echo $CODEBUILD_SRC_DIR
        echo Build started on `date`
        echo Building the Docker image...
        docker build -t $ECR_REPO_URI:latest ./
        docker images
        docker tag $ECR_REPO_URI:latest $ECR_REPO_URI:$IMAGE_TAG

      - |
        echo "### Pushing Container Image ###"
        docker push $ECR_REPO_URI:$IMAGE_TAG
      - cat ./build_scripts/imageDef.json | envsubst > $CODEBUILD_SRC_DIR/imagedefinitions.json
      - cat $CODEBUILD_SRC_DIR/imagedefinitions.json
  post_build:
    commands:
artifacts:
  files:
    - ./imagedefinitions.json
reports:
  jacoco-report:
    files:
      - "./build/reports/jacoco/jacoco.xml"
    file-format: "JACOCOXML"
  junit-report:
    files:
      - "**/*"
    base-directory: "./build/reports/junitXml"
cache:
  paths:
    - '/root/.gradle/caches/**/*'