version: 0.2
env:
  shell: bash
  git-credential-helper: yes
  variables:
    REGION: "ap-northeast-2"
phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - apt-get update
      - apt-get install -y jq
  pre_build:
    commands:
      - echo "Print awscli version"
      - aws --version
      - export MY_ECR="${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${ECR_REPO}"
      - echo "### SRC_VERISON-> ${CODEBUILD_RESOLVED_SOURCE_VERSION} | Logginging to ECR"
      - docker login --username AWS -p $(aws ecr get-login-password --region ${REGION}) ${MY_ECR}
      - export TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - export TAG=$(echo $TAG | sed -e "s/\.//g"| tr '[:upper:]' '[:lower:]')
      - export TAG=$(echo "${TAG:0:8}")
      - export IMAGE_TAG="${TAG}"
      - export REPOSITORY_URI="${MY_ECR}"
      - echo "## TAG-> ${TAG}"
      - |
        echo "Start Unit Test and Coverage Test"
        chmod +x ./gradlew 
        ./gradlew clean build  -x test --no-daemon
  build:
    commands:
      - |
        echo "### Building Container Image ###"
        echo $CODEBUILD_SRC_DIR
        echo Build started on `date`
        echo Building the Docker image...
        docker build -t $REPOSITORY_URI:latest ./
        docker images
        docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

      - |
        echo "### Pushing Container Image ###"
        docker push $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Pushed to ${IMAGE_TAG}" >> build_output.txt
artifacts:
  files:
    - build_output.txt