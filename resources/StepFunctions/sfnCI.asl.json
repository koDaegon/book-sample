{
  "Comment": "unit test automation workflow",
  "StartAt": "Check Pull Request Status",
  "States": {
    "Check Pull Request Status": {
      "Comment": "A Choice state adds branching logic to a state machine. Choice rules can implement 16 different comparison operators, and can be combined using And, Or, and Not",
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.detail.pullRequestStatus",
              "StringEquals": "Open"
            },
            {
              "Variable": "$.detail.event",
              "StringEquals": "pullRequestCreated"
            }
          ],
          "Next": "Get CI  Config Parameters"
        },
        {
          "And": [
            {
              "Variable": "$.detail.pullRequestStatus",
              "StringEquals": "Open"
            },
            {
              "Variable": "$.detail.event",
              "StringEquals": "pullRequestSourceBranchUpdated"
            }
          ],
          "Next": "Transform Exist Pull Request Data"
        },
        {
          "Variable": "$.detail.pullRequestStatus",
          "StringEquals": "Closed",
          "Next": "Check Pull Request is Closed"
        }
      ],
      "Default": "Fail"
    },
    "Get CI  Config Parameters": {
      "Type": "Task",
      "Next": "Check Container Build Required?",
      "Parameters": {
        "Path.$": "States.Format('/{}/codebuild', $.detail.repositoryNames[0])"
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:getParametersByPath",
      "ResultPath": "$.CIconfig"
    },
    "Check Container Build Required?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.ContainerBuildRequired",
          "StringEquals": "Y",
          "Next": "Create CodeBuild Project For Integration"
        }
      ],
      "Default": "Create CodeBuild Project For Test"
    },
    "Create CodeBuild Project For Integration": {
      "Type": "Task",
      "Parameters": {
        "Name.$": "States.Format('{}-codebuild-project-PR-{}', $.detail.repositoryNames[0] , $.detail.pullRequestId)",
        "ServiceRole.$": "States.Format('{}',$.CIconfig.Parameters[1].Value)",
        "Artifacts": {
          "Location.$": "States.Format('{}',$.CIconfig.Parameters[0].Value)",
          "Type": "S3",
          "NamespaceType": "BUILD_ID",
          "Path.$": "States.Format('{}',$.detail.repositoryNames[0])"
        },
        "BadgeEnabled": "true",
        "Description": "codebuild project for Basic CI",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_MEDIUM",
          "Image": "aws/codebuild/standard:5.0",
          "Type": "LINUX_CONTAINER",
          "PrivilegedMode": "true",
          "EnvironmentVariables": [
            {
              "Type": "PLAINTEXT",
              "Name": "BRANCH_NAME",
              "Value.$": "$.detail.sourceReference"
            },
            {
              "Type": "PLAINTEXT",
              "Name": "ECR_REPO",
              "Value.$": "States.Format('ecr-{}-intg',$.detail.repositoryNames[0])"
            },
            {
              "Type": "PLAINTEXT",
              "Name": "AWS_ACCOUNT_ID",
              "Value.$": "$.account"
            },
            {
              "Type": "PLAINTEXT",
              "Name": "ARTIFACT_BUCKET",
              "Value.$": "$.CIconfig.Parameters[0].Value"
            }
          ]
        },
        "Source": {
          "Type": "CODECOMMIT",
          "Location.$": "States.Format('https://git-codecommit.ap-northeast-2.amazonaws.com/v1/repos/{}', $.detail.repositoryNames[0])",
          "Buildspec": "build_scripts/buildspec.cbuild.yaml"
        },
        "SourceVersion.$": "$.detail.sourceReference",
        "Tags": [
          {
            "Key": "Type",
            "Value": "feature-intg"
          }
        ]
      },
      "ResultPath": "$.CodebuildProject",
      "Resource": "arn:aws:states:::aws-sdk:codebuild:createProject",
      "Next": "Transform New Pull Request Data"
    },
    "Check Pull Request is Closed": {
      "Type": "Choice",
      "Choices": [
        {
          "Or": [
            {
              "Variable": "$.detail-type",
              "StringEquals": "CodeCommit Pull Request State Change"
            },
            {
              "And": [
                {
                  "And": [
                    {
                      "Variable": "$.detail.event",
                      "StringEquals": "pullRequestMergeStatusUpdated"
                    },
                    {
                      "Variable": "$.detail.isMerged",
                      "StringEquals": "True"
                    }
                  ]
                }
              ]
            },
            {
              "Or": [
                {
                  "And": [
                    {
                      "Variable": "$.detail.event",
                      "StringEquals": "pullRequestStatusChanged"
                    },
                    {
                      "Variable": "$.detail.isMerged",
                      "StringEquals": "False"
                    },
                    {
                      "Variable": "$.detail.pullRequestStatus",
                      "StringEquals": "Closed"
                    }
                  ]
                }
              ]
            }
          ],
          "Next": "Transform Closed Pull Request Data"
        }
      ],
      "Default": "Fail"
    },
    "Transform Closed Pull Request Data": {
      "Type": "Pass",
      "Next": "Delete CodeBuild Badge Parameter",
      "Parameters": {
        "EventDetail": {
          "Time.$": "$.time",
          "Account.$": "$.account",
          "Region.$": "$.region"
        },
        "PullRequestDetail.$": "$.detail",
        "CodeBuildProjectName.$": "States.Format('{}-codebuild-project-PR-{}', $.detail.repositoryNames[0] , $.detail.pullRequestId)"
      }
    },
    "Delete CodeBuild Badge Parameter": {
      "Type": "Task",
      "Next": "Delete CodeBuild Project",
      "Parameters": {
        "Name.$": "States.Format('/{}/PR/{}/BadgeUrl', $.PullRequestDetail.repositoryNames[0], $.PullRequestDetail.pullRequestId)"
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:deleteParameter",
      "ResultPath": null
    },
    "Delete CodeBuild Project": {
      "Type": "Task",
      "Parameters": {
        "Name.$": "$.CodeBuildProjectName"
      },
      "Resource": "arn:aws:states:::aws-sdk:codebuild:deleteProject",
      "End": true
    },
    "Fail": {
      "Type": "Fail",
      "Error": "Invalid Pull Request Status "
    },
    "Transform Exist Pull Request Data": {
      "Type": "Pass",
      "Next": "Start CodeBuild for CI",
      "Parameters": {
        "EventDetail": {
          "Time.$": "$.time",
          "Account.$": "$.account",
          "Region.$": "$.region"
        },
        "PullRequestDetail.$": "$.detail",
        "CodeBuildProjectName.$": "States.Format('{}-codebuild-project-PR-{}', $.detail.repositoryNames[0] , $.detail.pullRequestId)"
      }
    },
    "Create CodeBuild Project For Test": {
      "Type": "Task",
      "Parameters": {
        "Name.$": "States.Format('{}-codebuild-project-PR-{}', $.detail.repositoryNames[0] , $.detail.pullRequestId)",
        "ServiceRole.$": "States.Format('{}',$.CIconfig.Parameters[1].Value)",
        "Artifacts": {
          "Location.$": "States.Format('{}',$.CIconfig.Parameters[0].Value)",
          "Type": "S3",
          "NamespaceType": "BUILD_ID",
          "Path.$": "States.Format('{}',$.detail.repositoryNames[0])"
        },
        "BadgeEnabled": "true",
        "Description": "codebuild project for Basic CI",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_MEDIUM",
          "Image": "aws/codebuild/standard:5.0",
          "Type": "LINUX_CONTAINER",
          "EnvironmentVariables": [
            {
              "Type": "PLAINTEXT",
              "Name": "BRANCH_NAME",
              "Value.$": "$.detail.sourceReference"
            }
          ]
        },
        "Source": {
          "Type": "CODECOMMIT",
          "Location.$": "States.Format('https://git-codecommit.ap-northeast-2.amazonaws.com/v1/repos/{}', $.detail.repositoryNames[0])",
          "Buildspec": "build_scripts/buildspec.build.yaml"
        },
        "SourceVersion.$": "$.detail.sourceReference",
        "Tags": [
          {
            "Key": "Type",
            "Value": "unit-test"
          }
        ]
      },
      "ResultPath": "$.CodebuildProject",
      "Resource": "arn:aws:states:::aws-sdk:codebuild:createProject",
      "Next": "Transform New Pull Request Data"
    },
    "Transform New Pull Request Data": {
      "Type": "Pass",
      "Next": "Put Codebuild Badge Url",
      "Parameters": {
        "EventDetail": {
          "Time.$": "$.time",
          "Account.$": "$.account",
          "Region.$": "$.region"
        },
        "PullRequestDetail.$": "$.detail",
        "CodeBuildProjectName.$": "$.CodebuildProject.Project.Name",
        "CodeBuildBadgeUrl.$": "$.CodebuildProject.Project.Badge.BadgeRequestUrl"
      }
    },
    "Put Codebuild Badge Url": {
      "Type": "Task",
      "Next": "Start CodeBuild for CI",
      "Parameters": {
        "Name.$": "States.Format('/{}/PR/{}/BadgeUrl', $.PullRequestDetail.repositoryNames[0], $.PullRequestDetail.pullRequestId)",
        "Value.$": "$.CodeBuildBadgeUrl",
        "Type": "String"
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
      "ResultPath": null
    },
    "Start CodeBuild for CI": {
      "Type": "Task",
      "Resource": "arn:aws:states:::codebuild:startBuild",
      "Parameters": {
        "ProjectName.$": "$.CodeBuildProjectName"
      },
      "Next": "Wait 10 Sec",
      "ResultSelector": {
        "BuildId.$": "$.Build.Id"
      },
      "ResultPath": "$.BuildDetail"
    },
    "Wait 10 Sec": {
      "Comment": "A Wait state delays the state machine from continuing for a specified time.",
      "Type": "Wait",
      "Seconds": 10,
      "Next": "Get Basic CI Status"
    },
    "Get Basic CI Status": {
      "Type": "Task",
      "Next": "Check Basic CI Result",
      "Parameters": {
        "Ids.$": "States.Array($.BuildDetail.BuildId)"
      },
      "Resource": "arn:aws:states:::aws-sdk:codebuild:batchGetBuilds",
      "ResultPath": "$.BuildDetail",
      "ResultSelector": {
        "BuildId.$": "$.Builds[0].Id",
        "BuildComplete.$": "$.Builds[0].BuildComplete",
        "CurrentStatus.$": "$.Builds[0].BuildStatus"
      }
    },
    "Check Basic CI Result": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.BuildDetail.BuildComplete",
          "BooleanEquals": true,
          "Next": "Parse CodeBuild Result"
        }
      ],
      "Default": "Wait 10 Sec"
    },
    "Parse CodeBuild Result": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName.$": "States.Format('arn:aws:lambda:ap-northeast-2:{}:function:lambda-{}-codebuild-result-parser:$LATEST',$.EventDetail.Account, $.PullRequestDetail.repositoryNames[0])"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Report Test Result"
    },
    "Report Test Result": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Update PR Approval Status",
          "States": {
            "Update PR Approval Status": {
              "Type": "Task",
              "Parameters": {
                "ApprovalState.$": "$.ResultStatus",
                "PullRequestId.$": "$.PullRequestId",
                "RevisionId.$": "$.RevisionId"
              },
              "Resource": "arn:aws:states:::aws-sdk:codecommit:updatePullRequestApprovalState",
              "End": true
            }
          }
        },
        {
          "StartAt": "Post Comment on PR",
          "States": {
            "Post Comment on PR": {
              "Type": "Task",
              "End": true,
              "Parameters": {
                "AfterCommitId.$": "$.AfterCommitId",
                "BeforeCommitId.$": "$.BeforeCommitId",
                "Content.$": "$.Content",
                "PullRequestId.$": "$.PullRequestId",
                "RepositoryName.$": "$.RepositoryName"
              },
              "Resource": "arn:aws:states:::aws-sdk:codecommit:postCommentForPullRequest"
            }
          }
        }
      ],
      "End": true
    }
  }
}